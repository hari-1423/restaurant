// src/repositories/InMemoryMenuItemRepository.ts
import { MenuItem } from "../models/MenuItem";
import { MenuItemRepository } from "./MenuItemRepository";

export class InMemoryMenuItemRepository implements MenuItemRepository {
  private menuItems: MenuItem[] = [];

  getAll(): MenuItem[] {
    return this.menuItems;
  }

  getById(id: number): MenuItem | undefined {
    return this.menuItems.find(item => item.id === id);
  }

  add(item: MenuItem): void {
    this.menuItems.push(item);
  }

  update(item: MenuItem): void {
    const index = this.menuItems.findIndex(i => i.id === item.id);
    if (index !== -1) {
      this.menuItems[index] = item;
    }
  }

  delete(id: number): void {
    this.menuItems = this.menuItems.filter(item => item.id !== id);
  }
}

// src/repositories/InMemoryOrderRepository.ts
import { Order } from "../models/Order";
import { OrderRepository } from "./OrderRepository";

export class InMemoryOrderRepository implements OrderRepository {
  private orders: Order[] = [];

  getAll(): Order[] {
    return this.orders;
  }

  getById(id: number): Order | undefined {
    return this.orders.find(order => order.id === id);
  }

  add(order: Order): void {
    this.orders.push(order);
  }
}
